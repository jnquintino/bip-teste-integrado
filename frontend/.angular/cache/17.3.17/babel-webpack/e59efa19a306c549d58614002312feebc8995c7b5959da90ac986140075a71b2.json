{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BeneficioService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/v1/beneficios';\n  }\n  listar() {\n    return this.http.get(this.apiUrl);\n  }\n  buscarPorId(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  criar(beneficio) {\n    return this.http.post(this.apiUrl, beneficio);\n  }\n  atualizar(id, beneficio) {\n    return this.http.put(`${this.apiUrl}/${id}`, beneficio);\n  }\n  excluir(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  transferir(transferencia) {\n    return this.http.post(`${this.apiUrl}/transferir`, transferencia, {\n      responseType: 'text'\n    });\n  }\n  buscarPorNome(nome) {\n    return this.http.get(`${this.apiUrl}/buscar?nome=${encodeURIComponent(nome)}`);\n  }\n  static {\n    this.ɵfac = function BeneficioService_Factory(t) {\n      return new (t || BeneficioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BeneficioService,\n      factory: BeneficioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BeneficioService","constructor","http","apiUrl","listar","get","buscarPorId","id","criar","beneficio","post","atualizar","put","excluir","delete","transferir","transferencia","responseType","buscarPorNome","nome","encodeURIComponent","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Volumes/Externo/Developer/Synapto/bip-teste-integrado/frontend/src/app/services/beneficio.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Beneficio, Transferencia } from '../models/beneficio.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeneficioService {\n  private apiUrl = 'http://localhost:8080/api/v1/beneficios';\n\n  constructor(private http: HttpClient) { }\n\n  listar(): Observable<Beneficio[]> {\n    return this.http.get<Beneficio[]>(this.apiUrl);\n  }\n\n  buscarPorId(id: number): Observable<Beneficio> {\n    return this.http.get<Beneficio>(`${this.apiUrl}/${id}`);\n  }\n\n  criar(beneficio: Beneficio): Observable<Beneficio> {\n    return this.http.post<Beneficio>(this.apiUrl, beneficio);\n  }\n\n  atualizar(id: number, beneficio: Beneficio): Observable<Beneficio> {\n    return this.http.put<Beneficio>(`${this.apiUrl}/${id}`, beneficio);\n  }\n\n  excluir(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  transferir(transferencia: Transferencia): Observable<string> {\n    return this.http.post<string>(`${this.apiUrl}/transferir`, transferencia, {\n      responseType: 'text' as 'json'\n    });\n  }\n\n  buscarPorNome(nome: string): Observable<Beneficio[]> {\n    return this.http.get<Beneficio[]>(`${this.apiUrl}/buscar?nome=${encodeURIComponent(nome)}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,yCAAyC;EAElB;EAExCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,MAAM,CAAC;EAChD;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACzD;EAEAC,KAAKA,CAACC,SAAoB;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,IAAI,CAACP,MAAM,EAAEM,SAAS,CAAC;EAC1D;EAEAE,SAASA,CAACJ,EAAU,EAAEE,SAAoB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAY,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,SAAS,CAAC;EACpE;EAEAI,OAAOA,CAACN,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAQ,UAAUA,CAACC,aAA4B;IACrC,OAAO,IAAI,CAACd,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,MAAM,aAAa,EAAEa,aAAa,EAAE;MACxEC,YAAY,EAAE;KACf,CAAC;EACJ;EAEAC,aAAaA,CAACC,IAAY;IACxB,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,MAAM,gBAAgBiB,kBAAkB,CAACD,IAAI,CAAC,EAAE,CAAC;EAC7F;;;uBAjCWnB,gBAAgB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBxB,gBAAgB;MAAAyB,OAAA,EAAhBzB,gBAAgB,CAAA0B,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}